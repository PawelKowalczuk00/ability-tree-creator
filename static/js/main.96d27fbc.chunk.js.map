{"version":3,"sources":["images/logo.png","serviceWorker.js","components/Login.js","components/Register.js","components/Navbar.js","components/Footer.js","utils/axios.js","actions/userDetails.js","actions/error.js","actions/heroes.js","store/index.js","components/Error.js","components/utils/loaders/LoaderWidth.js","components/Heroes.js","components/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","email","setEmail","password","setPassword","setRedirectTo","setShowLoader","globalActions","Navbar","to","className","src","logoPicture","alt","React","Component","axios","create","baseURL","headers","login","store","credentials","a","api","post","then","res","token","localStorage","setItem","setState","status","catch","er","console","error","response","actions","show","data","register","message","display","hide","undefined","getList","get","getItem","getOne","_id","addOne","info","expose","hero","exposedHero","initialState","name","useGlobal","useGlobalHook","globalState","style","onClick","redirectTo","showLoader","useState","useStateIfMounted","onSubmit","onLoginSubmit","type","placeholder","onChange","e","target","value","preventDefault","userDetails","finally","onRegisterSubmit","heroes","setHeroes","setName","getResponse","useEffect","log","map","index","key","creatorMail","Date","creationDate","toLocaleDateString","trees","length","App","path","component","Login","Register","Heroes","Footer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96d27fbc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a2770e0b.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useStateIfMounted } from \"use-state-if-mounted\";\n\nimport useGlobal from \"../store\";\nimport Loader from './utils/loaders/LoaderWidth.js';\n\nimport '../styles/Login.css';\n\nlet redirectTo = false;\nlet showLoader = false;\nlet email, setEmail, password, setPassword, setRedirectTo, setShowLoader, globalState, globalActions, isMounted, setIsMounted;\n\nexport default () => {\n    [email, setEmail] = useState();\n    [password, setPassword] = useState();\n    [redirectTo, setRedirectTo] = useStateIfMounted();\n    [showLoader, setShowLoader] = useStateIfMounted();\n    [globalState, globalActions] = useGlobal();\n\n    if (redirectTo)\n        return (\n            <div>\n                <Redirect to={`/ability-tree-creator/${redirectTo}`} />\n            </div>\n        );\n    else if (showLoader)\n        return (\n            <div className=\"content\">\n                <Loader />\n            </div>\n        );\n    else return (\n        <div className=\"content\">\n            <h2 className=\"row\">\n                Login\n            </h2>\n            <form className=\"row\" onSubmit={onLoginSubmit}>\n                <label className=\"row\">\n                    Email: <br />\n                    <input type=\"email\" placeholder=\"example@xd.com\" onChange={e => setEmail(e.target.value)} />\n                </label>\n                <label className=\"row\">\n                    Password: <br />\n                    <input type=\"password\" placeholder=\"********\" onChange={e => setPassword(e.target.value)} />\n                </label>\n                <input type=\"submit\" value=\"Login\" />\n            </form>\n            <Link to=\"/ability-tree-creator/register\" className=\"row\">\n                <div>\n                    Register instead\n                </div>\n            </Link>\n        </div>\n    );\n};\n\nconst onLoginSubmit = async e => {\n    e.preventDefault();\n    setShowLoader(true);\n\n    globalActions.userDetails.login({\n        email, password\n    })\n        .then(res => {\n            if (res >= 200 && res < 300)\n                setRedirectTo('/ability-tree-creator');\n        })\n        .finally(() => {\n            setShowLoader(false);\n        });\n}","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useStateIfMounted } from \"use-state-if-mounted\";\n\nimport useGlobal from \"../store\";\nimport Loader from './utils/loaders/LoaderWidth.js';\n\nimport '../styles/Login.css';\n\nlet redirectTo = false;\nlet showLoader = false;\nlet email, setEmail, password, setPassword, setRedirectTo, setShowLoader, globalState, globalActions;\n\nexport default () => {\n    [email, setEmail] = useState();\n    [password, setPassword] = useState();\n    [redirectTo, setRedirectTo] = useStateIfMounted();\n    [showLoader, setShowLoader] = useStateIfMounted();\n    [globalState, globalActions] = useGlobal();\n\n    if (redirectTo)\n        return (\n            <div>\n                <Redirect to={`/ability-tree-creator/${redirectTo}`} />\n            </div>\n        );\n    else if (showLoader)\n        return (\n            <div className=\"content\">\n                <Loader />\n            </div>\n        );\n    else return (\n        <div className=\"content\">\n            <h2 className=\"row\">\n                Register\n            </h2>\n            <form className=\"row\" onSubmit={onRegisterSubmit}>\n                <label className=\"row\">\n                    Email: <br />\n                    <input type=\"email\" placeholder=\"example@xd.com\" onChange={e => setEmail(e.target.value)} />\n                </label>\n                <label className=\"row\">\n                    Password: <br />\n                    <input type=\"password\" placeholder=\"********\" onChange={e => setPassword(e.target.value)} />\n                </label>\n                <input type=\"submit\" value=\"Register\" />\n            </form>\n            <Link to=\"/ability-tree-creator/login\" className=\"row\">\n                <div>\n                    Login instead\n                </div>\n            </Link>\n        </div>\n    );\n};\n\nconst onRegisterSubmit = e => {\n    e.preventDefault();\n    setShowLoader(true);\n\n    globalActions.userDetails.register({\n        email, password\n    })\n        .then(res => {\n            if (res >= 200 && res < 300) {\n                setRedirectTo('/ability-tree-creator');\n            }\n        })\n        .finally(() => {\n            setShowLoader(false);\n        });\n\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport '../styles/Navbar.css';\n\nimport logoPicture from '../images/logo.png';\n\nexport default class Navbar extends React.Component {\n\n    render() {\n        return (\n            <nav>\n                <div>\n                    <Link to=\"/ability-tree-creator\">\n                        <img className=\"logo\" src={logoPicture} alt='D I A B L O' />\n                    </Link>\n                </div>\n                <div className=\"account\">\n                    <Link to=\"/ability-tree-creator/login\">\n                        Login\n                    </Link>\n                </div>\n            </nav>\n        );\n    }\n}","import React from 'react';\n\nimport '../styles/footer.css';\n\nexport default () => {\n    return <footer>\n        <div className=\"white-opacity\">\n            Paweł Kowaclzuk 2020\n            | version: 1.0.0\n        </div>\n    </footer>\n}","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://ability-tree-api-pk2020.herokuapp.com/api\",\n    //baseURL: 'http://localhost:5000/api',\n    headers: {\n        \"Content-Type\": 'application/json'\n    }\n});","import api from '../utils/axios.js';\n\nexport const login = async (store, credentials) => {\n    return api.post('/login', credentials)\n        .then(res => {\n            const token = res.headers['x-auth-token'];\n            localStorage.setItem('token', token);\n            localStorage.setItem('email', credentials.email);\n            store.setState({ token });\n            return res.status;\n        })\n        .catch(er => {\n            console.error(er);\n            if (er.response) {\n                store.actions.error.show(`Could not login. ${er.response.data}`);\n            } else {\n                store.actions.error.show(`Unexpexted error with request to the server.`);\n            }\n        });\n}\n\nexport const register = async (store, credentials) => {\n    return api.post('/register', credentials)\n        .then(async res => {\n            await login(store, credentials);\n            return res.status;\n        })\n        .catch(er => {\n            console.error(er);\n            if (er.response) {\n                store.actions.error.show(`Could not register. ${er.response.data}`);\n            } else {\n                store.actions.error.show(`Unexpexted error with request to the server.`);\n            }\n        });\n}","export const show = (store, message) => {\n    store.setState({\n        error: {\n            display: 'block',\n            message\n        }\n    });\n};\n\nexport const hide = store => {\n    store.setState({\n        error: {\n            display: 'none',\n            message: undefined\n        }\n    });\n};","import api from '../utils/axios.js';\n\nexport const getList = async store => {\n    return api.get('/heroes', {\n        headers: {\n            \"x-auth-token\": localStorage.getItem('token')\n        }\n    })\n        .then(res => {\n            return res;\n        })\n        .catch(er => {\n            console.error(er);\n            if (er.response) {\n                store.actions.error.show(`Could not get list of heroes. ${er.response.data}`);\n            } else {\n                store.actions.error.show(`Unexpexted error with request to the server.`);\n            }\n            return er.response\n        });\n}\n\nexport const getOne = async (store, _id) => {\n    return api.get(`/heroes/${_id}`, {\n        headers: {\n            \"x-auth-token\": localStorage.getItem('token')\n        }\n    })\n        .then(async res => {\n            return res;\n        })\n        .catch(er => {\n            console.error(er);\n            if (er.response) {\n                store.actions.error.show(`Could not get a hero. ${er.response.data}`);\n            } else {\n                store.actions.error.show(`Unexpexted error with request to the server.`);\n            }\n        });\n}\n\nexport const addOne = async (store, info) => {\n    return api.post('/heroes', info, {\n        headers: {\n            \"x-auth-token\": localStorage.getItem('token')\n        }\n    })\n        .then(async res => {\n            return res;\n        })\n        .catch(er => {\n            console.error(er);\n            if (er.response) {\n                store.actions.error.show(`Could not get a hero. ${er.response.data}`);\n            } else {\n                store.actions.error.show(`Unexpexted error with request to the server.`);\n            }\n        });\n}\n\nexport const expose = (store, hero) => {\n    store.setState({exposedHero: hero._id});\n}","import React from \"react\";\r\nimport useGlobalHook from \"use-global-hook\";\r\n\r\nimport * as actions from \"../actions\";\r\n\r\nconst initialState = {\r\n  token: undefined,\r\n  error: {\r\n    display: 'none',\r\n    message: undefined\r\n  },\r\n  exposedHero: {\r\n    name: '',\r\n    _id: undefined\r\n  }\r\n};\r\n\r\nconst useGlobal = useGlobalHook(React, initialState, actions);\r\n\r\nexport default useGlobal;\r\n","import React from \"react\";\n\nimport useGlobal from \"../store\";\n\nimport '../styles/Error.css'\n\nexport default () => {\n  const [globalState, globalActions] = useGlobal();\n\n  const style = {\n    display: globalState.error.display\n  }\n\n  return (\n    <div className=\"error\" style={style}>\n      <p>\n          {globalState.error.message}\n      </p>\n      <br />\n      <button onClick={globalActions.error.hide}>\n          Hide\n      </button>\n    </div>\n  );\n};","import React from 'react';\nimport '../../../styles/LoaderWidthAdjust.css'\n\nexport default () => {\n    return <div className=\"container\">\n        <div className=\"box upper box1\"></div>\n        <div className=\"box upper box2\"></div>\n        <div className=\"box bottom box3\"></div>\n        <div className=\"box bottom box4\"></div>\n    </div>\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useStateIfMounted } from \"use-state-if-mounted\";\n\nimport useGlobal from \"../store\";\nimport Loader from './utils/loaders/LoaderWidth.js';\n\nimport '../styles/Heroes.css';\n\nexport default () => {\n    const [redirectTo, setRedirectTo] = useStateIfMounted(false);\n    const [showLoader, setShowLoader] = useStateIfMounted(false);\n    const [heroes, setHeroes] = useState([]);\n    const [name, setName] = useState();\n    const [globalState, globalActions] = useGlobal();\n\n    const getResponse = async () => {\n        setShowLoader(true);\n        const response = await globalActions.heroes.getList();\n        if (response?.status === 401)\n            return setRedirectTo('login');\n        else if (response?.status < 300)\n            setHeroes(response.data);\n\n        setShowLoader(false)\n    }\n\n    useEffect(() => {\n        getResponse();\n    }, []);\n\n    const onNewHeroAdd = e => {\n        globalActions.heroes.addOne({ name })\n            .then(res => {\n                globalActions.heroes.expose(res._id)\n                setRedirectTo(`/ability-tree-creator/hero`);\n            })\n            .catch(er => {\n                console.log('er :>> ', er);\n            })\n    }\n\n    const renderBody = () => {\n        console.log('heroes :>> ', heroes);\n        return (\n            <>\n                {heroes.map((hero, index) => {\n                    return (\n                        <tr key={hero._id}>\n                            <td>\n                                {index + 1}\n                            </td>\n                            <td>\n                                {hero.name}\n                            </td>\n                            <td>\n                                {hero.creatorMail}\n                            </td>\n                            <td>\n                                {(new Date(hero.creationDate)).toLocaleDateString()}\n                            </td>\n                            <td>\n                                {hero.trees ? hero.trees.length : 'No trees'}\n                            </td>\n                        </tr>\n                    );\n                })}\n            </>\n        );\n    }\n\n    const renderConditionally = () => {\n        if (redirectTo)\n            return (\n                <tr>\n                    <Redirect to={`/ability-tree-creator/${redirectTo}`} />\n                </tr>\n            );\n        else if (showLoader)\n            return (\n                <tr className=\"content\">\n                    <Loader />\n                </tr>\n            );\n        else\n            return renderBody();\n    }\n\n    return (\n        <div className=\"heroes\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>\n                            Number\n                            </th>\n                        <th>\n                            Name\n                            </th>\n                        <th>\n                            Creator\n                            </th>\n                        <th>\n                            Creation date\n                            </th>\n                        <th>\n                            Trees\n                            </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderConditionally()}\n                    <tr className=\"new-hero\">\n                        <td>\n                            Add new\n                        </td>\n                        <td>\n                            <input type=\"text\" onChange={e => setName(e.target.value)} />\n                        </td>\n                        <td>\n                            {localStorage.getItem('email')}\n                        </td>\n                        <td>\n                            {(new Date()).toLocaleDateString()}\n                        </td>\n                        <td>\n                            <button onClick={onNewHeroAdd}>\n                                +\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./Navbar.js\";\nimport Footer from './Footer.js';\nimport Error from './Error.js';\nimport Login from \"./Login.js\";\nimport Register from './Register.js';\nimport Heroes from './Heroes.js';\n/*import HeroDetail from './HeroDetail.js'; */\n\nimport '../styles/App.css';\n\nexport default class App extends React.Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <Navbar />\n                <Error />\n                <Switch>\n                    <Route path='/ability-tree-creator/login' component={Login} />\n                    <Route path='/ability-tree-creator/register' component={Register} />\n                    \n                    <Route path='/' component={Heroes} />\n                </Switch>\n                <Footer />\n            </div>\n        );\n    }\n}\n                    /*\n                    \n<Route path='/hero' component={HeroDetail} />\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App.js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}