{"version":3,"sources":["images/logo.png","serviceWorker.js","components/Login.js","components/Register.js","components/Navbar.js","components/Footer.js","utils/axios.js","actions/userDetails.js","actions/error.js","actions/heroes.js","actions/trees.js","store/index.js","components/Error.js","components/utils/loaders/LoaderWidth.js","components/utils/loaders/LoaderHeight.js","components/Heroes.js","components/TreesPreview.js","components/HeroDetail.js","components/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","email","setEmail","password","setPassword","setRedirectTo","setShowLoader","globalActions","Navbar","to","className","src","logoPicture","alt","React","Component","axios","create","baseURL","headers","login","store","credentials","a","api","post","then","res","token","localStorage","setItem","setState","status","catch","er","console","error","response","actions","show","data","register","message","display","hide","undefined","getList","get","getItem","getOne","_id","addOne","info","deleteOne","delete","getAll","ids","Promise","all","map","id","body","heroId","params","initialState","exposedHero","name","useGlobal","useGlobalHook","globalState","style","onClick","redirectTo","showLoader","useState","useStateIfMounted","onSubmit","onLoginSubmit","type","placeholder","onChange","e","target","value","preventDefault","userDetails","finally","onRegisterSubmit","props","heroes","setHeroes","setName","getResponse","useEffect","hero","index","key","creatorMail","Date","creationDate","toLocaleDateString","trees","length","log","setTrees","detailedTrees","setDetailedTrees","current","setCurrent","imgUrl","setImgUrl","getAllTrees","treeList","onNewTreeSubmit","newTreeId","tree","JSON","stringify","setHero","getHero","onDeleteClick","disabled","App","exact","path","component","Login","Register","HeroDetail","Heroes","Footer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a22e772c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a2770e0b.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useStateIfMounted } from \"use-state-if-mounted\";\n\nimport useGlobal from \"../store\";\nimport Loader from './utils/loaders/LoaderWidth.js';\n\nimport '../styles/Login.css';\n\nlet redirectTo = false;\nlet showLoader = false;\nlet email, setEmail, password, setPassword, setRedirectTo, setShowLoader, globalState, globalActions, isMounted, setIsMounted;\n\nexport default () => {\n    [email, setEmail] = useState();\n    [password, setPassword] = useState();\n    [redirectTo, setRedirectTo] = useStateIfMounted();\n    [showLoader, setShowLoader] = useStateIfMounted();\n    [globalState, globalActions] = useGlobal();\n\n    if (redirectTo)\n        return (\n            <div>\n                <Redirect to={`/ability-tree-creator/${redirectTo}`} />\n            </div>\n        );\n    else if (showLoader)\n        return (\n            <div className=\"content\">\n                <Loader />\n            </div>\n        );\n    else return (\n        <div className=\"content\">\n            <h2 className=\"row\">\n                Login\n            </h2>\n            <form className=\"row\" onSubmit={onLoginSubmit}>\n                <label className=\"row\">\n                    Email: <br />\n                    <input type=\"email\" placeholder=\"example@xd.com\" onChange={e => setEmail(e.target.value)} />\n                </label>\n                <label className=\"row\">\n                    Password: <br />\n                    <input type=\"password\" placeholder=\"********\" onChange={e => setPassword(e.target.value)} />\n                </label>\n                <input type=\"submit\" value=\"Login\" />\n            </form>\n            <Link to=\"/ability-tree-creator/register\" className=\"row\">\n                <div>\n                    Register instead\n                </div>\n            </Link>\n        </div>\n    );\n};\n\nconst onLoginSubmit = async e => {\n    e.preventDefault();\n    setShowLoader(true);\n\n    globalActions.userDetails.login({\n        email, password\n    })\n        .then(res => {\n            if (res >= 200 && res < 300)\n                setRedirectTo('/ability-tree-creator');\n        })\n        .finally(() => {\n            setShowLoader(false);\n        });\n}","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useStateIfMounted } from \"use-state-if-mounted\";\n\nimport useGlobal from \"../store\";\nimport Loader from './utils/loaders/LoaderWidth.js';\n\nimport '../styles/Login.css';\n\nlet redirectTo = false;\nlet showLoader = false;\nlet email, setEmail, password, setPassword, setRedirectTo, setShowLoader, globalState, globalActions;\n\nexport default () => {\n    [email, setEmail] = useState();\n    [password, setPassword] = useState();\n    [redirectTo, setRedirectTo] = useStateIfMounted();\n    [showLoader, setShowLoader] = useStateIfMounted();\n    [globalState, globalActions] = useGlobal();\n\n    if (redirectTo)\n        return (\n            <div>\n                <Redirect to={`/ability-tree-creator/${redirectTo}`} />\n            </div>\n        );\n    else if (showLoader)\n        return (\n            <div className=\"content\">\n                <Loader />\n            </div>\n        );\n    else return (\n        <div className=\"content\">\n            <h2 className=\"row\">\n                Register\n            </h2>\n            <form className=\"row\" onSubmit={onRegisterSubmit}>\n                <label className=\"row\">\n                    Email: <br />\n                    <input type=\"email\" placeholder=\"example@xd.com\" onChange={e => setEmail(e.target.value)} />\n                </label>\n                <label className=\"row\">\n                    Password: <br />\n                    <input type=\"password\" placeholder=\"********\" onChange={e => setPassword(e.target.value)} />\n                </label>\n                <input type=\"submit\" value=\"Register\" />\n            </form>\n            <Link to=\"/ability-tree-creator/login\" className=\"row\">\n                <div>\n                    Login instead\n                </div>\n            </Link>\n        </div>\n    );\n};\n\nconst onRegisterSubmit = e => {\n    e.preventDefault();\n    setShowLoader(true);\n\n    globalActions.userDetails.register({\n        email, password\n    })\n        .then(res => {\n            if (res >= 200 && res < 300) {\n                setRedirectTo('/ability-tree-creator');\n            }\n        })\n        .finally(() => {\n            setShowLoader(false);\n        });\n\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport '../styles/Navbar.css';\n\nimport logoPicture from '../images/logo.png';\n\nexport default class Navbar extends React.Component {\n\n    render() {\n        return (\n            <nav>\n                <div>\n                    <Link to=\"/ability-tree-creator\">\n                        <img className=\"logo\" src={logoPicture} alt='D I A B L O' />\n                    </Link>\n                </div>\n                <div className=\"account\">\n                    <Link to=\"/ability-tree-creator/login\">\n                        Login\n                    </Link>\n                </div>\n            </nav>\n        );\n    }\n}","import React from 'react';\n\nimport '../styles/footer.css';\n\nexport default () => {\n    return <footer>\n        <div className=\"white-opacity\">\n            Paweł Kowaclzuk 2020\n            | version: 1.0.0\n        </div>\n    </footer>\n}","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://ability-tree-api-pk2020.herokuapp.com/api\",\n    //baseURL: 'http://localhost:5000/api',\n    headers: {\n        \"Content-Type\": 'application/json'\n    }\n});","import api from '../utils/axios.js';\n\nexport const login = async (store, credentials) => {\n    return api.post('/login', credentials)\n        .then(res => {\n            const token = res.headers['x-auth-token'];\n            localStorage.setItem('token', token);\n            localStorage.setItem('email', credentials.email);\n            store.setState({ token });\n            return res.status;\n        })\n        .catch(er => {\n            console.error(er);\n            if (er.response) {\n                store.actions.error.show(`Could not login. ${er.response.data}`);\n            } else {\n                store.actions.error.show(`Unexpexted error with request to the server.`);\n            }\n        });\n}\n\nexport const register = async (store, credentials) => {\n    return api.post('/register', credentials)\n        .then(async res => {\n            await login(store, credentials);\n            return res.status;\n        })\n        .catch(er => {\n            console.error(er);\n            if (er.response) {\n                store.actions.error.show(`Could not register. ${er.response.data}`);\n            } else {\n                store.actions.error.show(`Unexpexted error with request to the server.`);\n            }\n        });\n}","export const show = (store, message) => {\n    store.setState({\n        error: {\n            display: 'block',\n            message\n        }\n    });\n};\n\nexport const hide = store => {\n    store.setState({\n        error: {\n            display: 'none',\n            message: undefined\n        }\n    });\n};","import api from '../utils/axios.js';\n\nexport const getList = async store => {\n    return api.get('/heroes', {\n        headers: {\n            \"x-auth-token\": localStorage.getItem('token')\n        }\n    })\n        .then(res => {\n            return res;\n        })\n        .catch(er => {\n            console.error(er);\n            if (er.response) {\n                store.actions.error.show(`Could not get list of heroes. ${er.response.data}`);\n            } else {\n                store.actions.error.show(`Unexpexted error with request to the server.`);\n            }\n            return er.response\n        });\n}\n\nexport const getOne = async (store, _id) => {\n    return api.get(`/heroes/${_id}`, {\n        headers: {\n            \"x-auth-token\": localStorage.getItem('token')\n        }\n    })\n        .then(async res => {\n            return res;\n        })\n        .catch(er => {\n            console.error(er);\n            if (er.response) {\n                store.actions.error.show(`Could not get a hero. ${er.response.data}`);\n            } else {\n                store.actions.error.show(`Unexpexted error with request to the server.`);\n            }\n        });\n}\n\nexport const addOne = async (store, info) => {\n    return api.post('/heroes', info, {\n        headers: {\n            \"x-auth-token\": localStorage.getItem('token')\n        }\n    })\n        .then(async res => {\n            return res;\n        })\n        .catch(er => {\n            console.error(er);\n            if (er.response) {\n                store.actions.error.show(`Could not post a hero. ${er.response.data}`);\n            } else {\n                store.actions.error.show(`Unexpexted error with request to the server.`);\n            }\n        });\n}\n\nexport const deleteOne = async (store, _id) => {\n    return api.delete(`/heroes/${_id}`, {\n        headers: {\n            \"x-auth-token\": localStorage.getItem('token')\n        }\n    })\n        .then(async res => {\n            return res;\n        })\n        .catch(er => {\n            console.error(er);\n            if (er.response) {\n                store.actions.error.show(`Could not get a hero. ${er.response.data}`);\n            } else {\n                store.actions.error.show(`Unexpexted error with request to the server.`);\n            }\n        });\n}","import api from '../utils/axios.js';\n\nexport const getOne = (store, _id) => {\n    return api.get(`/trees/${_id}`, {\n        headers: {\n            \"x-auth-token\": localStorage.getItem('token')\n        }\n    })\n        .then(res => {\n            return res;\n        })\n        .catch(er => {\n            console.error(er);\n            if (er.response) {\n                store.actions.error.show(`Could not get a hero. ${er.response.data}`);\n            } else {\n                store.actions.error.show(`Unexpexted error with request to the server.`);\n            }\n        });\n}\n\nexport const getAll = async (store, ids) => {\n    return Promise.all(ids.map(id => getOne(store, id)));\n}\n\nexport const addOne = (store, body, heroId) => {\n    return api.post('/trees', body, {\n        headers: {\n            \"x-auth-token\": localStorage.getItem('token')\n        },\n        params: { heroId }\n    })\n        .then(res => {\n            return res;\n        })\n        .catch(er => {\n            console.error(er);\n            if (er.response) {\n                store.actions.error.show(`Could not post a hero. ${er.response.data}`);\n            } else {\n                store.actions.error.show(`Unexpexted error with request to the server.`);\n            }\n        });\n}\n\nexport const deleteOne = (store, _id) => {\n    return api.delete(`/trees/${_id}`, {\n        headers: {\n            \"x-auth-token\": localStorage.getItem('token')\n        }\n    })\n        .then(res => {\n            return res;\n        })\n        .catch(er => {\n            console.error(er);\n            if (er.response) {\n                store.actions.error.show(`Could not get a hero. ${er.response.data}`);\n            } else {\n                store.actions.error.show(`Unexpexted error with request to the server.`);\n            }\n        });\n}","import React from \"react\";\r\nimport useGlobalHook from \"use-global-hook\";\r\n\r\nimport * as actions from \"../actions\";\r\n\r\nconst initialState = {\r\n  token: undefined,\r\n  error: {\r\n    display: 'none',\r\n    message: undefined\r\n  },\r\n  exposedHero: {\r\n    name: '',\r\n    _id: undefined\r\n  }\r\n};\r\n\r\nconst useGlobal = useGlobalHook(React, initialState, actions);\r\n\r\nexport default useGlobal;\r\n","import React from \"react\";\n\nimport useGlobal from \"../store\";\n\nimport '../styles/Error.css'\n\nexport default () => {\n  const [globalState, globalActions] = useGlobal();\n\n  const style = {\n    display: globalState.error.display\n  }\n\n  return (\n    <div className=\"error\" style={style}>\n      <p>\n          {globalState.error.message}\n      </p>\n      <br />\n      <button onClick={globalActions.error.hide}>\n          Hide\n      </button>\n    </div>\n  );\n};","import React from 'react';\nimport '../../../styles/LoaderWidthAdjust.css'\n\nexport default () => {\n    return <div className=\"container\">\n        <div className=\"box upper box1\"></div>\n        <div className=\"box upper box2\"></div>\n        <div className=\"box bottom box3\"></div>\n        <div className=\"box bottom box4\"></div>\n    </div>\n}\n","import React from 'react';\nimport '../../../styles/LoaderHeightAdjust.css'\n\nexport default () => {\n    return <td className=\"container\">\n        <span className=\"box upper box1\"></span>\n        <span className=\"box upper box2\"></span>\n        <span className=\"box bottom box3\"></span>\n        <span className=\"box bottom box4\"></span>\n    </td>\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useStateIfMounted } from \"use-state-if-mounted\";\n\nimport useGlobal from \"../store\";\nimport Loader from './utils/loaders/LoaderHeight.js';\n\nimport '../styles/Heroes.css';\n\nexport default props => {\n    const [redirectTo, setRedirectTo] = useStateIfMounted(false);\n    const [showLoader, setShowLoader] = useStateIfMounted(true);\n    const [heroes, setHeroes] = useState([]);\n    const [name, setName] = useState();\n    const [globalState, globalActions] = useGlobal();\n\n    const getResponse = async () => {\n        setShowLoader(true);\n        const response = await globalActions.heroes.getList();\n        if (response?.status === 401)\n            return setRedirectTo('login');\n        else if (response?.status < 300)\n            setHeroes(response.data);\n\n        setShowLoader(false);\n    }\n\n    useEffect(() => {\n        getResponse();\n    }, []);\n\n    const onNewHeroAdd = e => {\n        globalActions.heroes.addOne({ name })\n            .then(res => {\n                setRedirectTo(`hero/${res._id}`);\n            })\n            .catch(er => {\n                console.log('er :>> ', er);\n            })\n    }\n\n    const renderBody = () => {\n        return (\n            <>\n                {heroes.map((hero, index) => {\n                    return (\n                        <tr key={hero._id} onClick={e => setRedirectTo(`hero/${hero._id}`)}>\n                            <td>\n                                {index + 1}\n                            </td>\n                            <td>\n                                {hero.name}\n                            </td>\n                            <td>\n                                {hero.creatorMail}\n                            </td>\n                            <td>\n                                {(new Date(hero.creationDate)).toLocaleDateString()}\n                            </td>\n                            <td>\n                                {hero.trees ? hero.trees.length : 'No trees'}\n                            </td>\n                        </tr>\n                    );\n                })}\n            </>\n        );\n    }\n\n    const renderConditionally = () => {\n        if (redirectTo)\n            return (\n                <>\n                    <Redirect to={`ability-tree-creator/${redirectTo}`} />\n                </>\n            );\n        else if (showLoader)\n            return (\n                <tr className=\"content\">\n                    <td></td>\n                    <td></td>\n                    <Loader />\n                    <td></td>\n                    <td></td>\n                </tr>\n            );\n        else\n            return renderBody();\n    }\n\n    return (\n        <div className=\"heroes\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>\n                            Number\n                            </th>\n                        <th>\n                            Name\n                            </th>\n                        <th>\n                            Creator\n                            </th>\n                        <th>\n                            Creation date\n                            </th>\n                        <th>\n                            Trees\n                            </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderConditionally()}\n                    <tr className=\"new-hero\">\n                        <td>\n                            Add new\n                        </td>\n                        <td>\n                            <input type=\"text\" onChange={e => setName(e.target.value)} />\n                        </td>\n                        <td>\n                            {localStorage.getItem('email')}\n                        </td>\n                        <td>\n                            {(new Date()).toLocaleDateString()}\n                        </td>\n                        <td>\n                            <button onClick={onNewHeroAdd}>\n                                +\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}","import React, { useEffect, useState } from \"react\";\n\nimport '../styles/TreesPreview.css';\n\nimport useGlobal from \"../store\";\nimport Loader from \"./utils/loaders/LoaderWidth\";\n\nexport default props => {\n\n    const [trees, setTrees] = useState(props.trees);\n    const [detailedTrees, setDetailedTrees] = useState([]);\n    const [current, setCurrent] = useState('loader');\n    const [name, setName] = useState();\n    const [imgUrl, setImgUrl] = useState();\n\n    const [globalState, globalActions] = useGlobal();\n\n    const getAllTrees = async () => {\n        if (trees.length === 0)\n            setCurrent('new');\n        else {\n            const treeList = await globalActions.trees.getAll(trees);\n            setDetailedTrees(treeList.map(response => {\n                return response.data\n            }));\n            setCurrent(trees.length-1);\n        }\n    }\n\n    useEffect(() => {\n        getAllTrees();\n    }, [trees]);\n\n    const onNewTreeSubmit = () => {\n        setCurrent('loader');\n        globalActions.trees.addOne({ name, imgUrl }, props.heroId)\n            .then(res => {\n                const newTreeId = res.data._id\n                setTrees([...trees, newTreeId]);\n            })\n            .catch(() => {\n                setCurrent('new');\n            })\n    }\n\n    const renderConditionally = () => {\n        if (current === 'loader')\n            return <Loader />\n        else if (current === 'new')\n            return (\n                <form onSubmit={onNewTreeSubmit}>\n                    <label>Name <input type=\"text\" name=\"name\" onChange={e => setName(e.target.value)} /></label>\n                    <label>Picture URL <input type=\"text\" name=\"imgUrl\" onChange={e => setImgUrl(e.target.value)} /></label>\n                    <input type=\"submit\" value=\"Create new ability tree\" />\n                </form>\n            );\n        else return (\n            <div className=\"abilities\">\n                Abilities of {JSON.stringify(detailedTrees[current])}\n            </div>\n        );\n    }\n\n    const renderThumbnails = () => {\n        return (\n            <>\n                {detailedTrees.map((tree, index) => {\n                    return (\n                        <div className=\"thumbnail\" key={tree._id} onClick={() => setCurrent(index)}>\n                            <img src={tree.imgUrl} alt=\"\" /> <br />\n                            <p>\n                                {tree.name}\n                            </p>\n                        </div>\n                    );\n                })}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"tree\">\n            <div className=\"preview\">\n                {renderThumbnails()}\n                <button className=\"new-tree\" onClick={() => setCurrent('new')}>\n                    +\n                </button>\n            </div>\n            <div className=\"board\">\n                {renderConditionally()}\n            </div>\n        </div>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useStateIfMounted } from \"use-state-if-mounted\";\n\nimport useGlobal from \"../store\";\nimport Loader from './utils/loaders/LoaderWidth.js';\n\nimport '../styles/HeroDetail.css';\nimport TreesPreview from \"./TreesPreview\";\n\nexport default props => {\n    const [redirectTo, setRedirectTo] = useStateIfMounted(false);\n    const [showLoader, setShowLoader] = useStateIfMounted(true);\n    const [hero, setHero] = useState([]);\n    const [globalState, globalActions] = useGlobal();\n\n    const getHero = async () => {\n        setShowLoader(true);\n        const response = await globalActions.heroes.getOne(props.match.params.id);\n        if (response?.status === 401)\n            setRedirectTo('login');\n        else if (response?.status < 300 && response?.status >= 200)\n            setHero(response.data);\n        else\n            setRedirectTo('');\n\n        setShowLoader(false);\n    }\n\n    useEffect(() => {\n        getHero();\n    }, []);\n\n    const onDeleteClick = async e => {\n        e.target.disabled = true;\n        const response = await globalActions.heroes.deleteOne(hero._id);\n        if (response?.status === 200)\n            setRedirectTo('/');\n    }\n\n    const renderBody = () => {\n        return (\n            <>\n                <h2>{hero.name}</h2>\n                <div>\n                    <span>Creator: </span>\n                    <span>{hero.creatorMail}</span>\n                </div>\n                <div>\n                    <span>Creation Date: </span>\n                    <span>\n                        {(new Date(hero.creationDate)).toLocaleDateString()}\n                    </span>\n                </div>\n                <button className=\"removeBtn\" onClick={onDeleteClick}>\n                    Delete\n                </button>\n                <TreesPreview trees={hero.trees || []} heroId={hero._id} />\n            </>\n        );\n    }\n\n    const renderConditionally = () => {\n        if (redirectTo)\n            return (\n                <>\n                    <Redirect to={`ability-tree-creator/${redirectTo}`} />\n                </>\n            );\n        else if (showLoader)\n            return (\n                <div className=\"content\">\n                    <Loader />\n                </div>\n            );\n        else\n            return renderBody();\n    }\n\n    return (\n        <div className=\"hero-details\">\n\n            {renderConditionally()}\n\n        </div>\n    );\n}","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Navbar from \"./Navbar.js\";\nimport Footer from './Footer.js';\nimport Error from './Error.js';\nimport Login from \"./Login.js\";\nimport Register from './Register.js';\nimport Heroes from './Heroes.js';\nimport HeroDetail from './HeroDetail.js';\n\nimport '../styles/App.css';\n\nexport default class App extends React.Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <Navbar />\n                <Error />\n                <Switch>\n                    <Route exact path='/ability-tree-creator/login' component={Login} />\n                    <Route exact path='/ability-tree-creator/register' component={Register} />\n                    <Route exact path='/ability-tree-creator/hero/:id' component={HeroDetail} />\n                    <Route exact path='/ability-tree-creator' component={Heroes} />\n                    <Route path='/'>\n                        <Redirect to='/ability-tree-creator' />\n                    </Route>\n                </Switch>\n                <Footer />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App.js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}